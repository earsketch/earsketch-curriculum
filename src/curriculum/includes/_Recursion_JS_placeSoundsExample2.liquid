init();
setTempo(124);

// similar recursive function to placeSounds() in last example
// two extra parameters have been added here.. tracknum and clip length
function placeSoundsOnTrack(soundlist, tracknum, start, cliplength) {
	if(soundlist.length == 0) return;
	println(start);
	
	fitMedia(soundlist[0], tracknum, start, start+cliplength);
	placeSoundsOnTrack(soundlist.slice(1, soundlist.length), tracknum, start+cliplength, cliplength);
}
// set up new variables to access specific folders of audio clips
var DRUMFOLDER  = TMAINLOOP;
var BASSFOLDER  = EABASS;
var SYNTHFOLDER = ELEAD;
var BLIPFOLDER  = EIGHTATARISFX;

// set up arrays to hold the audio clips that will be randomly selected from the folders
var drumclips  = [];
var bassclips  = [];
var synthclips = [];
var blipclips  = [];

// fill up the arrays with random audio clip selections from specified folders:

// these audio clips will be placed every two measures, so 4 audio clips will fill up 8 measures
for(var i = 0; i < 4; i++) {
	drumclips = drumclips.concat(selectRandomFile(DRUMFOLDER));
}
// these audio clips will be placed every two beats (0.5 measures each), so 16 audio clips will fill up 8 measures
for(var i = 0; i < 16; i++) {
	bassclips = bassclips.concat(selectRandomFile(BASSFOLDER));
}
// these audio clips will be placed every three 8th-notes (0.375 measures each), so there needs to be more than 16 of them to fill up 8 measures.
// since 8 measures / 0.375 = 21.333..., we can set this to use 21 audio clips, which will make the clips fill up close to the entire 8 measures.
for(var i = 0; i < 21; i++) {
	synthclips = synthclips.concat(selectRandomFile(SYNTHFOLDER));
	blipclips  = blipclips.concat(selectRandomFile(BLIPFOLDER));
}

placeSoundsOnTrack(drumclips, 1, 1, 2);          // place a new audio clip every 2 measures
placeSoundsOnTrack(bassclips, 2, 1, 0.5);        // place a new audio clip every 0.5 measures (every two beats)
placeSoundsOnTrack(synthclips, 3, 1, 0.375);      // place a new audio clip every 0.375 measures (every three eighth-notes)
placeSoundsOnTrack(blipclips, 4, 1.125, 0.375);  // start the audio clips on this track one eighth-note later than the others

// use volume effects to set up a balanced mix of the four tracks
setEffect(1, VOLUME, GAIN, 0);
setEffect(2, VOLUME, GAIN, -6);
setEffect(3, VOLUME, GAIN, -12);
setEffect(4, VOLUME, GAIN, -9);

finish();



// INTERESTING TIP:
//  since this script uses randomness, each time you run this it should produce a different sounding piece!
