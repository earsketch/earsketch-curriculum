WEBVTT

00:00:00.968 --> 00:00:02.970 align:middle line:79% position:44% size:78%
Narrator:
The "Amen Break" was originally

00:00:02.970 --> 00:00:07.341 align:middle line:79% position:47% size:63%
a four-measure drum break
created in the 1960s

00:00:07.341 --> 00:00:11.245 align:middle line:79% position:47% size:63%
that has gradually become
one of the most remixed

00:00:11.245 --> 00:00:15.582 align:middle line:79% position:50% size:56%
and most sampled clips
in music history.

00:00:15.582 --> 00:00:17.818 align:middle line:79% position:50% size:65%
We're going to look at how
to create the "Amen Break"

00:00:17.818 --> 00:00:19.453 align:middle line:79% position:48% size:48%
in EarSketch
and also how to use

00:00:19.453 --> 00:00:22.489 align:middle line:79% position:48% size:48%
randomness to remix
the Amen break.

00:00:22.489 --> 00:00:23.824 align:middle line:79% position:48% size:48%
First let's look at
how to create it.

00:00:23.824 --> 00:00:26.894 align:middle line:79% position:50% size:50%
I have an array here
of drum sounds from

00:00:26.894 --> 00:00:29.730 align:middle line:79% position:50% size:70%
the EarSketch sound library—
a kick sound, snare sound,

00:00:29.730 --> 00:00:30.797 align:middle line:85% position:48% size:43%
and some hi-hats.

00:00:30.797 --> 00:00:35.936 align:middle line:79% position:47% size:63%
Then down here I'm going
to use makeBeat to create

00:00:35.936 --> 00:00:36.737 align:middle line:85% position:50% size:41%
the "amenBreak."

00:00:36.737 --> 00:00:38.772 align:middle line:79% position:50% size:45%
And I've broken up
my beatStrings

00:00:38.772 --> 00:00:41.608 align:middle line:79% position:50% size:70%
into several parts here
to make it easier to manage.

00:00:41.608 --> 00:00:44.945 align:middle line:79% position:50% size:70%
Each one of these represents
one measure of music.

00:00:44.945 --> 00:00:47.748 align:middle line:79% position:50% size:75%
And so I have a, b and c
for the kick and snare sounds,

00:00:47.748 --> 00:00:51.151 align:middle line:79% position:50% size:56%
and cymbal 1, 2, and 3
for the hi-hat sounds.

00:00:51.151 --> 00:00:53.387 align:middle line:79% position:45% size:73%
This not only makes it easier
to see how the music works

00:00:53.387 --> 00:00:55.289 align:middle line:79% position:46% size:68%
since we've got
four measures to deal with,

00:00:55.289 --> 00:00:56.823 align:middle line:79% position:48% size:48%
but it also lets me
take advantage

00:00:56.823 --> 00:00:59.660 align:middle line:79% position:50% size:65%
of the inherent repetition
of measures 1 and 2

00:00:59.660 --> 00:01:00.327 align:middle line:85% position:48% size:43%
of the amenBreak.

00:01:00.327 --> 00:01:02.629 align:middle line:79% position:50% size:50%
So you can see here,
define amenBreak

00:01:02.629 --> 00:01:06.433 align:middle line:79% position:50% size:81%
as being a + a—
there's the repetition— + b + c.

00:01:06.433 --> 00:01:09.503 align:middle line:79% position:50% size:61%
And amenCymbals as being
cymbal 1 + cymbal 1—

00:01:09.503 --> 00:01:13.607 align:middle line:79% position:45% size:73%
again there's the repetition—
plus cymbal 2 plus cymbal 3.

00:01:13.607 --> 00:01:15.575 align:middle line:79% position:50% size:61%
And then I have
two makeBeat calls here,

00:01:15.575 --> 00:01:18.779 align:middle line:79% position:50% size:81%
which put those two beatStrings—
amenBreak and amenCymbals—

00:01:18.779 --> 00:01:20.447 align:middle line:85% position:45% size:73%
on tracks 1 and 2 of the DAW.

00:01:20.447 --> 00:01:23.917 align:middle line:79% position:50% size:81%
And then I can hear the complete
amenBreak from there.

00:01:23.917 --> 00:01:28.922 align:middle line:85% position:47% size:58%
[electronic drum beats]

00:01:32.526 --> 00:01:34.061 align:middle line:79% position:48% size:43%
So let's go ahead
and remix this.

00:01:34.061 --> 00:01:36.396 align:middle line:79% position:47% size:53%
And what I want to do
is I want to create

00:01:36.396 --> 00:01:38.365 align:middle line:79% position:47% size:58%
a half a measure
that's eight characters

00:01:38.365 --> 00:01:41.635 align:middle line:79% position:50% size:70%
that are randomly generated
and inserted into the middle

00:01:41.635 --> 00:01:43.103 align:middle line:85% position:48% size:43%
of the amenBreak.

00:01:43.103 --> 00:01:45.038 align:middle line:79% position:47% size:53%
So first let's create
those characters,

00:01:45.038 --> 00:01:46.273 align:middle line:85% position:50% size:75%
those eight random characters.

00:01:46.273 --> 00:01:50.577 align:middle line:79% position:50% size:81%
I'm going to define this
as a string, var, insertSection,

00:01:50.577 --> 00:01:52.813 align:middle line:79% position:50% size:75%
and I'll define it
as the empty string initially,

00:01:52.813 --> 00:01:55.282 align:middle line:79% position:50% size:65%
beginning and end quotes
the nothing in the middle.

00:01:55.282 --> 00:01:58.752 align:middle line:79% position:45% size:73%
Then I'll fill up that string
using concatenation

00:01:58.752 --> 00:02:00.020 align:middle line:85% position:47% size:53%
inside of a for loop.

00:02:00.020 --> 00:02:07.461 align:middle line:85% position:50% size:75%
So for (var i= 0; i &lt; 8; i++).

00:02:07.461 --> 00:02:09.563 align:middle line:79% position:47% size:63%
Then inside of this loop,
on each iteration,

00:02:09.563 --> 00:02:11.598 align:middle line:79% position:48% size:43%
I'm going to take
insertSection

00:02:11.598 --> 00:02:14.067 align:middle line:79% position:50% size:65%
and add one more character
onto the end of it

00:02:14.067 --> 00:02:14.968 align:middle line:85% position:50% size:56%
through concatenation.

00:02:14.968 --> 00:02:20.507 align:middle line:79% position:50% size:81%
So insertSection = insertSection
plus some random operation.

00:02:20.507 --> 00:02:24.111 align:middle line:79% position:45% size:73%
I want that random operations
generate either 0, 1, 2, 3,

00:02:24.111 --> 00:02:26.013 align:middle line:79% position:50% size:61%
or 4 every time,
because if you look back

00:02:26.013 --> 00:02:27.748 align:middle line:79% position:50% size:31%
at my array,
the indices

00:02:27.748 --> 00:02:32.419 align:middle line:85% position:50% size:56%
are 0, 1, 2, 3, and 4.

00:02:32.419 --> 00:02:38.558 align:middle line:79% position:45% size:73%
So I can start to get at that
by doing Math.random—

00:02:38.558 --> 00:02:41.028 align:middle line:79% position:45% size:73%
that gives me a random number
between 0 and 1.

00:02:41.028 --> 00:02:44.031 align:middle line:79% position:50% size:61%
I can multiply
that random number by 5—

00:02:44.031 --> 00:02:46.533 align:middle line:79% position:47% size:58%
that gives me a random
number between 0 and 5,

00:02:46.533 --> 00:02:48.335 align:middle line:85% position:50% size:41%
not including 5.

00:02:48.335 --> 00:02:49.836 align:middle line:79% position:46% size:68%
There's a problem with that
because that's

00:02:49.836 --> 00:02:51.605 align:middle line:79% position:47% size:58%
a floating point number
with decimal points,

00:02:51.605 --> 00:02:53.573 align:middle line:79% position:47% size:63%
but I want an array index
which is just

00:02:53.573 --> 00:02:55.842 align:middle line:85% position:50% size:70%
an integer—0, 1, 2, 3, or 5.

00:02:55.842 --> 00:02:58.178 align:middle line:79% position:47% size:58%
So I can add on
one more function here.

00:02:58.178 --> 00:02:59.980 align:middle line:79% position:50% size:61%
I can take
that whole random result

00:02:59.980 --> 00:03:03.583 align:middle line:79% position:50% size:65%
and call Math.floor on it—
that takes

00:03:03.583 --> 00:03:07.854 align:middle line:79% position:47% size:58%
whatever number that is
and returns the integer

00:03:07.854 --> 00:03:08.989 align:middle line:85% position:50% size:35%
just below it.

00:03:08.989 --> 00:03:15.195 align:middle line:79% position:48% size:48%
So if that number
is 4.01 or 4.98575,

00:03:15.195 --> 00:03:18.698 align:middle line:85% position:50% size:61%
it would return 4 to me.

00:03:18.698 --> 00:03:22.035 align:middle line:79% position:46% size:68%
So once I've run that
I can also put in a println

00:03:22.035 --> 00:03:25.472 align:middle line:79% position:50% size:75%
statement to see
what this insertSection string

00:03:25.472 --> 00:03:27.174 align:middle line:85% position:50% size:75%
looks like when it's all done.

00:03:27.174 --> 00:03:30.644 align:middle line:79% position:45% size:73%
So when I press run I can see
I get a random string here

00:03:30.644 --> 00:03:33.313 align:middle line:79% position:47% size:53%
in my console,
in this case a string

00:03:33.313 --> 00:03:37.517 align:middle line:79% position:50% size:81%
of random numbers—
zero, one, two, three, and four.

00:03:37.517 --> 00:03:39.519 align:middle line:79% position:46% size:68%
My music hasn't
changed yet at all, though,

00:03:39.519 --> 00:03:41.755 align:middle line:79% position:44% size:78%
because I haven't done anything
to actually put

00:03:41.755 --> 00:03:44.624 align:middle line:79% position:47% size:63%
this insertSection string
into the amenBreak.

00:03:44.624 --> 00:03:48.528 align:middle line:79% position:50% size:75%
So to do that I need to define
a few more variables.

00:03:48.528 --> 00:03:50.397 align:middle line:79% position:47% size:58%
I'm going to define one
called newA.

00:03:50.397 --> 00:03:53.633 align:middle line:79% position:50% size:65%
And what I want newA to do
is to take insertSection—

00:03:53.633 --> 00:03:56.636 align:middle line:79% position:46% size:68%
so that's eight characters,
half a measure—

00:03:56.636 --> 00:03:58.305 align:middle line:79% position:47% size:63%
but I want it to be
a whole measure of music.

00:03:58.305 --> 00:04:03.143 align:middle line:79% position:45% size:73%
So I want to add on
half of my original a string.

00:04:03.143 --> 00:04:07.147 align:middle line:79% position:50% size:70%
So I have
insertSection + a.substring.

00:04:07.147 --> 00:04:08.682 align:middle line:79% position:47% size:53%
I want to take
the second half of it

00:04:08.682 --> 00:04:12.185 align:middle line:79% position:45% size:73%
so I'll start at character 8
and I'll end in character 16.

00:04:12.185 --> 00:04:14.588 align:middle line:79% position:50% size:56%
We can actually
print this out as well

00:04:14.588 --> 00:04:17.791 align:middle line:79% position:47% size:63%
just to make sure
it's what we think it is.

00:04:17.791 --> 00:04:21.795 align:middle line:79% position:47% size:63%
So again you can see here
we have first half

00:04:21.795 --> 00:04:25.298 align:middle line:79% position:50% size:75%
is a randomly generated string
and then the second half

00:04:25.298 --> 00:04:28.201 align:middle line:79% position:50% size:61%
is the second half
of my original a string.

00:04:28.201 --> 00:04:31.104 align:middle line:79% position:50% size:70%
So then finally I can define
one more variable.

00:04:31.104 --> 00:04:38.278 align:middle line:79% position:50% size:81%
I'll call it newBeat
and have that be a +, not a + a,

00:04:38.278 --> 00:04:45.519 align:middle line:85% position:50% size:81%
but have it be a + newA + b + c.

00:04:45.519 --> 00:04:47.320 align:middle line:10% position:47% size:63%
Then instead of inserting
amenBreak here,

00:04:47.320 --> 00:04:50.190 align:middle line:10% position:47% size:53%
I can insert newBeat.

00:04:50.190 --> 00:04:53.460 align:middle line:10% position:45% size:73%
I can run that and I can hear
my remixed amenBreak.

00:04:53.460 --> 00:04:57.464 align:middle line:85% position:47% size:58%
[electronic drum beats]

00:05:01.434 --> 00:05:02.569 align:middle line:10% position:50% size:50%
That remix is
a little bit subtle,

00:05:02.569 --> 00:05:05.505 align:middle line:10% position:44% size:78%
so it may also help to also see
what we've done visually.

00:05:05.505 --> 00:05:10.243 align:middle line:10% position:50% size:56%
So I can go ahead
and println(amenBreak)

00:05:10.243 --> 00:05:15.849 align:middle line:10% position:50% size:75%
and then also println(newBeat)
so that we can compare them

00:05:15.849 --> 00:05:18.852 align:middle line:10% position:45% size:73%
to each other in the console.

00:05:18.852 --> 00:05:21.855 align:middle line:10% position:46% size:68%
So here you can see, again,
the only difference are

00:05:21.855 --> 00:05:28.028 align:middle line:10% position:50% size:81%
these randomly generated numbers
right here.

00:05:28.028 --> 00:05:30.797 align:middle line:79% position:45% size:73%
So what we've done
is we've used random numbers,

00:05:30.797 --> 00:05:33.500 align:middle line:79% position:50% size:56%
string operations,
to remix the amenBreak

00:05:33.500 --> 00:05:35.202 align:middle line:85% position:50% size:35%
with makeBeat.

