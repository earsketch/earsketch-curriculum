WEBVTT00:00:00.500 --> 00:00:05.910[monophonic electronic tones]00:00:05.910 --> 00:00:09.090Brandon: Hey, welcome backto another EarSketch video.00:00:09.090 --> 00:00:12.090My name is Brandon and I'ma member of the EarSketch team.00:00:12.090 --> 00:00:15.200Today I'm going to talkto you about variables.00:00:15.200 --> 00:00:18.162So to put it simply, variablesare a way to store00:00:18.162 --> 00:00:20.500a piece of informationwithin a script.00:00:20.500 --> 00:00:23.940This could be a number,a sound constant,00:00:23.940 --> 00:00:26.410a string, any of the datatypeswe've learned about.00:00:26.410 --> 00:00:29.580And all these data typesare a form of information00:00:29.580 --> 00:00:31.290that we can use.00:00:31.290 --> 00:00:34.180So to use a variable,we give the variable a name00:00:34.180 --> 00:00:38.110and then assign it a value,this information.00:00:38.110 --> 00:00:41.380And what makes variables so coolis that we can use them00:00:41.380 --> 00:00:44.650to hold any of these data types,this information,00:00:44.650 --> 00:00:48.970and then reuse that informationmultiple times whenever we want.00:00:48.970 --> 00:00:50.990And if we want to make changesto the information00:00:50.990 --> 00:00:52.250we're using in our script,00:00:52.250 --> 00:00:57.040like maybe we want to swap outone sound constant for another,00:00:57.040 --> 00:01:00.070all we have to dois change what information00:01:00.070 --> 00:01:01.900is assigned to our variables.00:01:01.900 --> 00:01:05.890So variables can end upsaving us a lot of time.00:01:05.890 --> 00:01:07.420Let's take a look at thisin EarSketch00:01:07.420 --> 00:01:09.960and you'll see that I mean.00:01:09.960 --> 00:01:12.310So to start, let's createa new script.00:01:12.310 --> 00:01:14.800I'm going to namethe script “Variables.”00:01:14.800 --> 00:01:16.400We're given the standard itemswe need00:01:16.400 --> 00:01:19.110for an EarSketch script herefrom EarSketch import.00:01:19.110 --> 00:01:22.500The “init” function which startsa new music project in EarSketch00:01:22.500 --> 00:01:23.860and the setTempo function,00:01:23.860 --> 00:01:26.470which I'm actually goingto slow down our tempo00:01:26.470 --> 00:01:28.045to 100 beats per minute.00:01:28.045 --> 00:01:29.620And at the end of our script,00:01:29.620 --> 00:01:31.100like always, I havethe finish function00:01:31.100 --> 00:01:34.350which gets all the musicready to play inside the DAW.00:01:34.350 --> 00:01:37.160So let's defineour first variable.00:01:37.160 --> 00:01:39.570To do this we needto give it a name,00:01:39.570 --> 00:01:41.710usually something descriptive,00:01:41.710 --> 00:01:45.290and then assign it a value,this information.00:01:45.290 --> 00:01:47.880And we do this by usingthe Assignment Operator00:01:47.880 --> 00:01:49.390which is just the equals sign00:01:49.390 --> 00:01:51.010but, in this case,it's not functioning00:01:51.010 --> 00:01:53.170exactly like an equals sign.00:01:53.170 --> 00:01:55.650It's saying assign the valueon the right00:01:55.650 --> 00:01:57.840to the variable nameon the left,00:01:57.840 --> 00:01:59.500so here we go.00:01:59.500 --> 00:02:02.882Let's call our variable "synth 1"00:02:02.882 --> 00:02:05.700and assign to a soundconstant from the sound browser,00:02:05.700 --> 00:02:10.270a synth sound.Let’s see; I like this one.00:02:10.270 --> 00:02:11.980The variable is nowholding the sound00:02:11.980 --> 00:02:13.440so let's use it in our music00:02:13.440 --> 00:02:16.390by insertinga fitMedia function call.00:02:16.390 --> 00:02:18.580So in the spotwhere we get fitMedia a sound,00:02:18.580 --> 00:02:20.786I'm going to use our variable,synth 1,00:02:20.786 --> 00:02:22.800becauseit's holding our sound.00:02:22.800 --> 00:02:25.460I'll put it on track 1starting at measure 100:02:25.460 --> 00:02:30.500and ending at measure 2.I’ll press run so we can listen.00:02:30.500 --> 00:02:37.380[music clip]00:02:37.380 --> 00:02:40.180All right, now we havesuccessfully used one variable00:02:40.180 --> 00:02:41.620but I want to fleshthis out a bit more,00:02:41.620 --> 00:02:44.540so let's define a couple more.00:02:44.540 --> 00:02:46.450I'm going to createa second variable00:02:46.450 --> 00:02:49.320for a second synth sound,synth 2,00:02:49.320 --> 00:02:51.016and assign itto the sound constant00:02:51.016 --> 00:02:54.380for Hip Hop Solo Moog Lead 1.00:02:54.380 --> 00:02:58.620And I’ll define a variablefor my drums as well right here.00:02:58.620 --> 00:03:00.270Now, to make moreof a complete song,00:03:00.270 --> 00:03:03.180I'm going to adda whole bunch of fitMedia calls,00:03:03.180 --> 00:03:05.740each one usingone of my three variables.00:03:05.740 --> 00:03:08.730So as you can see, my synthsounds are all on track 100:03:08.730 --> 00:03:11.510and they kind of alternate backand forth00:03:11.510 --> 00:03:14.710while my drums are on track 2so that they'll play throughout00:03:14.710 --> 00:03:17.020the whole songfrom measure 1 to 9.00:03:17.020 --> 00:03:19.420Let’s see what this sounds like.00:03:19.420 --> 00:03:38.580[hip hop groove]00:03:38.580 --> 00:03:41.570All right, so what'sthe big deal here?00:03:41.570 --> 00:03:44.010I could have just enteredor pasted00:03:44.010 --> 00:03:47.470in the sound consent namesfor all of these fitMedia calls.00:03:47.470 --> 00:03:49.800But what if I wanted to changeone of my sounds?00:03:49.800 --> 00:03:52.540Let's say I wanted to changemy synth 1 sound00:03:52.540 --> 00:03:55.065to some other hip hop sound.00:03:55.065 --> 00:03:57.590If I wasn't using variables,00:03:57.590 --> 00:03:58.970I'd have to go throughand change00:03:58.970 --> 00:04:01.300all these fitMedia callsmanually.00:04:01.300 --> 00:04:07.220Now imagine if I had 50 fitMediacalls maybe for a full song.00:04:07.220 --> 00:04:10.080It would take foreverto go through and change00:04:10.080 --> 00:04:13.830that many lines in my script,but because I use variables00:04:13.830 --> 00:04:16.020I can swap outmy sounds really quickly.00:04:16.020 --> 00:04:19.270I can just change the assignmentstatement at the top here.00:04:19.270 --> 00:04:21.490Every time I use synth 1 below,00:04:21.490 --> 00:04:23.930it will use the updated soundinstead00:04:23.930 --> 00:04:27.020and the same concept can applyto other data types as well.00:04:27.020 --> 00:04:28.550So this whole idea of being able00:04:28.550 --> 00:04:30.300to make quick changesin our scripts00:04:30.300 --> 00:04:33.830with variables is kind ofcentral to music making.00:04:33.830 --> 00:04:36.350Often the first time we listento something we've made00:04:36.350 --> 00:04:39.390we think about how it can beimproved or how could be better.00:04:39.390 --> 00:04:40.980So we go backwe make some changes,00:04:40.980 --> 00:04:43.270then listen again,and maybe our music is better00:04:43.270 --> 00:04:44.750and maybe it's not,00:04:44.750 --> 00:04:46.850but we kind of stickwith this cycle00:04:46.850 --> 00:04:50.280of constantly improvingour music and making changes.00:04:50.280 --> 00:04:52.510And what's so importantabout variables00:04:52.510 --> 00:04:55.210is it allows usto experiment like this00:04:55.210 --> 00:04:58.860until we have a piece of musicthat we're really proud of.00:04:58.860 --> 00:05:01.850So go ahead and try usingsome variables in your scripts.00:05:01.850 --> 00:05:04.920You'll find it's easierto make changes and easier00:05:04.920 --> 00:05:08.280to nail that exact soundthat you're looking for.00:05:08.280 --> 00:05:11.080That's it for this video.Thanks for watching.00:05:11.080 --> 00:05:19.274[hip hop groove]