WEBVTT00:00:05.270 --> 00:00:06.500Léa: Hi.00:00:06.500 --> 00:00:11.020Welcome to this EarSketch videoabout musical form and function.00:00:11.020 --> 00:00:13.330My name is Léa,and in this video00:00:13.330 --> 00:00:15.320I'll explainwhat musical form is00:00:15.320 --> 00:00:20.050and how you can writeyour own functions in EarSketch.00:00:20.050 --> 00:00:23.950As you might know,most songs have a structure.00:00:23.950 --> 00:00:27.530This structure can be composedof different levels.00:00:27.530 --> 00:00:31.650Let’s say three examplesof musical levels.00:00:31.650 --> 00:00:34.810First let's talk about beats.00:00:34.810 --> 00:00:37.830Beats are regulartime intervals.00:00:37.830 --> 00:00:41.950They are the shortest timedivisions in your song.00:00:41.950 --> 00:00:44.710For example, I will playan EarSketch script00:00:44.710 --> 00:00:47.410and clap on the beat.00:00:55.500 --> 00:00:59.150The beat duration dependson your setTempo function00:00:59.150 --> 00:01:00.850at the beginning of your script.00:01:00.850 --> 00:01:04.940If your tempo is fast, your beatduration is going to be short.00:01:04.940 --> 00:01:06.870But if your tempo is slower,00:01:06.870 --> 00:01:10.500your beat durationwill be longer.00:01:10.500 --> 00:01:14.390The second musical level we'relooking at contains measures.00:01:14.390 --> 00:01:18.120A measure containsa fixed number of beats.00:01:18.120 --> 00:01:20.910In EarSketch, one measureis equal to four beats,00:01:20.910 --> 00:01:25.220which is pretty commonin Western popular music.00:01:25.220 --> 00:01:27.750The timeline in the digitalaudio workstation00:01:27.750 --> 00:01:31.930indicates time both in secondsand in measures.00:01:31.930 --> 00:01:35.390The third musical level I wantto talk to you about00:01:35.390 --> 00:01:37.200is the section level.00:01:37.200 --> 00:01:40.890Sections are broader musicalentities, and contrary to beats00:01:40.890 --> 00:01:44.350or measures they do nothave a fixed duration.00:01:44.350 --> 00:01:46.910A song is composedof several sections,00:01:46.910 --> 00:01:50.780each of which representsan idea or a feeling.00:01:50.780 --> 00:01:56.760Examples of sections are intro,outro, verse, chorus, or solo.00:01:56.760 --> 00:02:00.350When composing music,it's good to plan ahead00:02:00.350 --> 00:02:02.580and see what your song structurewill be00:02:02.580 --> 00:02:05.040before you started coding.00:02:05.040 --> 00:02:07.720This will help havinga good song structure00:02:07.720 --> 00:02:09.540and code structure.00:02:09.540 --> 00:02:11.430In this particular task,00:02:11.430 --> 00:02:15.890you will be asked to createa song with the ABA form.00:02:15.890 --> 00:02:18.600ABA means that you havethree sections,00:02:18.600 --> 00:02:23.350and that the firstand last sections are the same.00:02:23.350 --> 00:02:25.430Now let's see how functionscan help00:02:25.430 --> 00:02:27.330with the structure of your song.00:02:27.330 --> 00:02:30.500You already know that functionstake some inputs00:02:30.500 --> 00:02:33.550and convert them to outputs.00:02:33.550 --> 00:02:36.910So far, you've only been usingEarSketch functions00:02:36.910 --> 00:02:41.130like setTempo,fitMedia, or setEffect,00:02:41.130 --> 00:02:43.460but you can also writeyour own functions00:02:43.460 --> 00:02:46.250called user defined functions.00:02:46.250 --> 00:02:51.680This greatly helps organizeyour code for two main reasons.00:02:51.680 --> 00:02:54.750First, it will reducethe length of your code.00:02:54.750 --> 00:02:56.610A function is like a variable00:02:56.610 --> 00:02:59.060that containsa set of instructions.00:02:59.060 --> 00:03:01.700This way, when you needto use the function,00:03:01.700 --> 00:03:03.540you just have to call it—whichtakes00:03:03.540 --> 00:03:07.770one line—instead of havingto rewrite all the instructions.00:03:08.920 --> 00:03:11.470Second, it helpsorganize your code00:03:11.470 --> 00:03:13.830and make it easier to read.00:03:13.830 --> 00:03:17.250It's important that you giveyour functions names00:03:17.250 --> 00:03:19.190that indicate what they do.00:03:19.190 --> 00:03:22.560For example, if you writea function to create a verse,00:03:22.560 --> 00:03:26.420you can call it “verse”or “verse 1.”00:03:26.420 --> 00:03:31.350Now let's see an exampleof user defined function.00:03:31.350 --> 00:03:35.110Let's start with writingour function definition.00:03:35.110 --> 00:03:37.600You will need to usethe keyword function00:03:37.600 --> 00:03:40.830and then the function namethat you chose.00:03:40.830 --> 00:03:42.630As you have seen before,00:03:42.630 --> 00:03:46.520you always add parenthesisafter function name.00:03:46.520 --> 00:03:49.450Between the parenthesis,you will write the inputs00:03:49.450 --> 00:03:51.760that you want for your function.00:03:51.760 --> 00:03:55.060These inputs are the onesyou will have to provide00:03:55.060 --> 00:03:58.770when you call the functionlater in your code.00:03:58.770 --> 00:04:02.050I recommend that you giveprecise names to your inputs00:04:02.050 --> 00:04:06.410so that it's easierto know what they need to be.00:04:06.410 --> 00:04:09.220For example here,since we will use the function00:04:09.220 --> 00:04:11.110to create a song section,00:04:11.110 --> 00:04:13.200we will use the inputsof the beginning00:04:13.200 --> 00:04:15.420and end of the section.00:04:15.420 --> 00:04:18.600So we can call them startMeasureand endMeasure.00:04:18.600 --> 00:04:20.660This way when we callthe function,00:04:20.660 --> 00:04:24.470we can just indicate at whichmeasure the section should start00:04:24.470 --> 00:04:27.720and at which measureit will stop.00:04:27.720 --> 00:04:29.970Then we have the functioninstructions,00:04:29.970 --> 00:04:32.020which are indented.00:04:32.020 --> 00:04:34.650Notice that if youforget your colon00:04:34.650 --> 00:04:36.640after the function parentheses,00:04:36.640 --> 00:04:39.390your instructionsare not indented.00:04:42.750 --> 00:04:46.140Here our instructionsare just two fitMedia.00:04:46.140 --> 00:04:49.380We select sounds and tracksfor this fitMedia00:04:49.380 --> 00:04:52.520and for the start and end timewe use the inputs,00:04:52.520 --> 00:04:55.560starMeasure and endMeasure.00:04:55.560 --> 00:04:58.070You are free to chooseany inputs that you like.00:04:58.070 --> 00:05:00.150You can also call themwhatever you like.00:05:00.150 --> 00:05:03.130So if you want to change themto “startTime” and “endTime,”00:05:03.130 --> 00:05:04.620you can do that.00:05:04.620 --> 00:05:07.720You just need to make surethat you use your inputs00:05:07.720 --> 00:05:11.160in the instructionswith the same spelling.00:05:13.290 --> 00:05:15.790So this is itfor the function definition.00:05:15.790 --> 00:05:17.970Now if we want to usethe function,00:05:17.970 --> 00:05:20.190we have to call it.00:05:20.190 --> 00:05:23.670Let's say we want to use thissection from measure 1 to 5.00:05:23.670 --> 00:05:28.310Then I just have to writeverse(1,5)—100:05:28.310 --> 00:05:32.790is the start time input,and 5 is the end time input.00:05:32.790 --> 00:05:35.990Let's see what happenswhen we run the code.00:05:39.100 --> 00:05:42.210If we want to use the functionagain later in the song,00:05:42.210 --> 00:05:45.030for examplefrom measure 10 to 15,00:05:45.030 --> 00:05:49.140we just have to write“verse(10,15).”00:05:49.140 --> 00:05:51.840Now let's run it.00:05:53.250 --> 00:05:57.140And you see that nowwe have two verse sections,00:05:57.140 --> 00:06:00.540from measure 1 to 5and then from measure 10 to 15,00:06:00.540 --> 00:06:03.490and you can add more versesif you'd like.00:06:03.490 --> 00:06:06.740And so as you can see, insteadof writing four fitMedias,00:06:06.740 --> 00:06:09.990one for each of the sections,00:06:09.990 --> 00:06:12.640you just write two linesin your function00:06:12.640 --> 00:06:17.040and then you call your functionas often as you want to call it.00:06:17.040 --> 00:06:19.580And that's it for our videoabout form and function.00:06:19.580 --> 00:06:22.440Thank you for watching.You have the beat.