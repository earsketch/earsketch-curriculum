WEBVTT00:00:00.500 --> 00:00:04.431[intro music]00:00:04.431 --> 00:00:07.098Léa: Hi there.My name is Léa, and I'd like to00:00:07.098 --> 00:00:10.750welcome you to this newEarSketch video about for loops.00:00:10.750 --> 00:00:13.400I'll be summarizing whatyou've seen so far about loops00:00:13.400 --> 00:00:16.850and then I walk youthrough a workflow.00:00:16.850 --> 00:00:19.320So for loops area perfect example00:00:19.320 --> 00:00:24.010of how you can use code to makethe computer do your work.00:00:24.010 --> 00:00:25.630Let's say you have a printer00:00:25.630 --> 00:00:28.600and you want to make200 copies of a document.00:00:28.600 --> 00:00:31.690Well, you're not going to pressthe print button 200 times,00:00:31.690 --> 00:00:33.390but you're goingto write 200 copies00:00:33.390 --> 00:00:35.290into your printing window.00:00:35.290 --> 00:00:37.190Well, this is a hidden for loop.00:00:37.190 --> 00:00:40.630The computer has only oneinstruction, print the document,00:00:40.630 --> 00:00:44.040but it goes overthe instruction 200 times00:00:44.040 --> 00:00:48.140instead of you having to writethe instruction 200 times.00:00:48.140 --> 00:00:52.390Now, let’s see how we can applythis to music in EarSketch.00:00:52.390 --> 00:00:54.870So let's say that you wantto add a sound00:00:54.870 --> 00:00:57.670at the beginningof every measure in your song,00:00:57.670 --> 00:01:01.970but you want it to play only forthe first half of the measure.00:01:01.970 --> 00:01:06.650So if a measure went to 1.5,then 2 to 2.5, et cetera,00:01:06.650 --> 00:01:08.060and then you want to adda different00:01:08.060 --> 00:01:10.430sound in the secondhalf of each measure.00:01:10.430 --> 00:01:15.800So from measure 1.5 to 2,then 2.5 to 3, et cetera.00:01:15.800 --> 00:01:18.050Well, if you didn'thave a for loop,00:01:18.050 --> 00:01:21.530you would write two fitMediasfor every measure of your song.00:01:21.530 --> 00:01:23.280Ain’t nobody got time for that!00:01:23.280 --> 00:01:27.110So let's how we can do thiswith only two fitMedia00:01:27.110 --> 00:01:29.080in one for loop.00:01:29.080 --> 00:01:31.200So let's see howthis example works.00:01:31.200 --> 00:01:35.180As usual, we havethe EarSketch library imported.00:01:35.180 --> 00:01:38.670Then we initialize our code,and at the end we finish it.00:01:38.670 --> 00:01:40.800And we have the setTempo.00:01:40.800 --> 00:01:43.580In this particular example,we use two sound files,00:01:43.580 --> 00:01:47.750which are stored intothe variables drums1 and drums2.00:01:47.750 --> 00:01:49.570And here is our for loop.00:01:49.570 --> 00:01:51.600So for loopsare easily recognizable00:01:51.600 --> 00:01:55.100because they start with forand they are indented,00:01:55.100 --> 00:01:59.450so indentation is the spaceat the beginning of the line.00:01:59.450 --> 00:02:02.450For example, this linewhich starts here is indented,00:02:02.450 --> 00:02:05.710which means that it's aninstruction inside the for loop.00:02:05.710 --> 00:02:07.580But this linehas no indentation,00:02:07.580 --> 00:02:11.320which means it's outsideof the loop.00:02:11.320 --> 00:02:14.370Let's go back at the first lineof the for loop.00:02:14.370 --> 00:02:16.370Measure is the loop counter.00:02:16.370 --> 00:02:19.580It's a variable that was createdjust for the loop.00:02:19.580 --> 00:02:22.180Every time we go throughone iteration of the loop,00:02:22.180 --> 00:02:23.490which means the computer00:02:23.490 --> 00:02:26.260completes the indentand instructions,00:02:26.260 --> 00:02:30.380this variable measureis upgraded to the next integer.00:02:30.380 --> 00:02:34.230Range indicates that it startswith 1 and ends at 9.00:02:34.230 --> 00:02:37.150This means that measurewill be first equal to 1,00:02:37.150 --> 00:02:40.870then 2, 3, 4,5, 6, 7, 8,00:02:40.870 --> 00:02:44.940but not 9 because the finishingnumber is exclusive.00:02:44.940 --> 00:02:46.530So why is the firstnumber inclusive00:02:46.530 --> 00:02:48.340and the last one exclusive?00:02:48.340 --> 00:02:51.010It depends on each language.Here it's Python.00:02:51.010 --> 00:02:55.420It was decided by peoplewho created the language.00:02:55.420 --> 00:02:58.510Now let's see the instructionsinside the for loop.00:02:58.510 --> 00:03:03.570The first fitMedia placesthe sound drums1 on track 1,00:03:03.570 --> 00:03:06.630from measure to measure,plus 0.5.00:03:06.630 --> 00:03:11.260And the second fitMedia placessound drums2 on track 200:03:11.260 --> 00:03:15.650from measureplus 0.5 to measure plus 1.00:03:15.650 --> 00:03:19.670We’ll be using this table tohelp see what the variables are00:03:19.670 --> 00:03:22.600while the computergoes through the loop.00:03:22.600 --> 00:03:26.080So the first column hereis measure, our loop counter.00:03:26.080 --> 00:03:29.950Then we have the start timeof drums1, which is measure,00:03:29.950 --> 00:03:34.180and the end time of drums1,which is measure plus 0.5.00:03:34.180 --> 00:03:36.030Then we have the start timeof drums200:03:36.030 --> 00:03:37.820and the end time of drums2.00:03:37.820 --> 00:03:41.380I encourage you to tryto fill the table.00:03:41.380 --> 00:03:43.610So pause the video,try to fill it for measure00:03:43.610 --> 00:03:46.100is equal to 1, 2,and 3 to see00:03:46.100 --> 00:03:49.570if you can determinewhat the variables are.00:03:49.570 --> 00:03:53.290And then play the video to seeif you're right.00:03:53.290 --> 00:03:56.590So when measure is equal to 1,drums1 is going to start00:03:56.590 --> 00:03:59.930at measure 1and end at measure plus 0.5,00:03:59.930 --> 00:04:04.550which is 1 plus 0.5,which is 1.5.00:04:04.550 --> 00:04:07.510So you can see it herein the DAW.00:04:07.510 --> 00:04:11.730drums2 is going to start at 1.5when drums1 end,00:04:11.730 --> 00:04:15.820and it’s going to end at 1plus 1, which is 2.00:04:15.820 --> 00:04:19.140You can see here inthe digital audio workstation.00:04:19.140 --> 00:04:22.950Now one measure is equal to 2,drums1 starts at measure 200:04:22.950 --> 00:04:26.630and ends at measure 2.5.You can see it here.00:04:26.630 --> 00:04:31.820And drums2 starts at measure 2.5and stops at measure 3.00:04:31.820 --> 00:04:33.230Now we can go a little faster.00:04:33.230 --> 00:04:36.470For measure 3,drums1 starts at measure 300:04:36.470 --> 00:04:38.070and ends at measure 3.500:04:38.070 --> 00:04:42.440and drums2 starts at measure 3.5and ends at measure 4.00:04:42.440 --> 00:04:46.360So we go on until measureis equal to 8, and then drums100:04:46.360 --> 00:04:49.770is going to measure 8 andat measure 8.5 and drums200:04:49.770 --> 00:04:53.040is going to start at measure 8.5and end at measure 9.00:04:53.040 --> 00:04:56.380And this way, we have filledboth of our tracks00:04:56.380 --> 00:04:59.460with the different sounds.00:04:59.460 --> 00:05:03.210So let's see what this soundslike in EarSketch.00:05:03.210 --> 00:05:11.440[music]00:05:11.440 --> 00:05:14.430And this concludes our videoon for loops.00:05:14.430 --> 00:05:16.440Thank you for watchingand see you soon!