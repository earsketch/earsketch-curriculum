# Automatisches Mischen 2: Benutze bedingte Anweisungen, um die Tracks zu mischen

# Setup
from earsketch import *
setTempo(120)

# Hinzufügen von Melodie und Bass
melody1 = YG_ALT_POP_GUITAR_3
melody2 = YG_ALT_POP_GUITAR_1
bass1 = YG_ALT_POP_BASS_1
bass2 = DUBSTEP_SUBBASS_008
strings = YG_HIP_HOP_STRINGS_4
fitMedia(melody1, 1, 1, 9)
fitMedia(melody2, 1, 9, 17)
fitMedia(bass1, 2, 1, 9)
fitMedia(bass2, 2, 9, 17)
fitMedia(strings, 3, 9, 17)

# Percussion mit makeBeat() hinzufügen
beatKick = "0---0-----0-0---"
beatSnare = "--0-0------000-"
soundKick = OS_KICK02
soundSnare = OS_SNARE06
für Takte im Bereich(5, 17):
    makeBeat(soundKick, 4, measure, beatKick)
    makeBeat(soundSnare, 5, measure, beatSnare)

# Meine Tracks mischen
# Zuerst analysieren wir die Tracks auf Lautstärke
loudnessTrack1 = analyzeTrack(1, RMS_AMPLITUDE)
print("Die Lautstärke von Track 1 ist" + str(loudnessTrack1))
loudnessTrack2 = analyzeTrack(2, RMS_AMPLITUDE)
print("Die Lautstärke von Track 2 ist" + str(loudnessTrack2))
loudnessTrack3 = analyzeTrack(3, RMS_AMPLITUDE)
print("Die Lautstärke von Track 3 ist" + str(loudnessTrack3))

wenn loudnessTrack1 < loudnessTrack2:
    # wenn Track 1 leiser ist als Track 2 dann erhöhen wir die Lautstärke von Track 1
    setEffect(1, VOLUME, GAIN, +5)
    print("Track 1 war leiser als Track 2")
elif loudnessTrack1 < loudnessTrack3:
    # wenn Track 1 lauter als Track 2, aber leiser als Track 3 ist, erhöhen wir das Volumen von Track 1
    setEffect(1, VOLUME, GAIN, +5)
    print("Track 1 war leiser als Track 3")
else:
    # wenn Track 1 lauter als Track 2 und 3 ist, dann ändern wir nichts
    print("Track 1 war bereits der lauteste Track ")