[[nw_ch_1_getstartedwithearsketch]]
== Empezamos con EarSketch
:nofooter:

En este capítulo vas a aprender cómo funciona EarSketch, cómo colocar sonidos (clips) en tu música, y cómo depurar tu código.

¡Cualquier persona (especialmente tú) puede aprender a programar! Igual que al aprender a tocar un instrumento musical, hay que practicar consistentemente para progresar. No te desanimes si te trancas. Es parte del proceso. Pide ayuda en tu clase o busca en línea si es necesario.

¡Te deseamos mucha suerte! Antes de comenzar, mira este ejemplo de lo que puedes hacer con EarSketch:

[role="curriculum-python curriculum-mp4"]
[[video1livepy]]
video::./videoMedia/001-01-WhyLearnProgrammingforMusic-PY.mp4[]

[role="curriculum-javascript curriculum-mp4"]
[[video1livejs]]
video::./videoMedia/001-01-WhyLearnProgrammingforMusic-JS.mp4[]

[[ch_1_1_discoverearsketch]]
=== Descubre EarSketch

En EarSketch, darás instrucciones a la computadora escribiendo código. Una línea del código corresponde a una instrucción. Todas las instrucciones juntas forman el programa (estas instrucciones también se pueden llamar un algoritmo). De la misma manera que se usan las recetas de un libro de cocina para preparar una comida, se ejecuta un programa de EarSketch para crear una canción. ¿Dónde se coloca el código dentro de un programa? ¡Averígualo mirando este video!

[role="curriculum-mp4"]
[[video1a]]
video::./videoMedia/001-03-EarSketchWorkplace-PY-JS.mp4[]

////
TODO: This video needs some revamping. See recommandations here: https://docs.google.com/spreadsheets/d/114pWGd27OkNC37ZRCZDIvoNPuwGLcO8KM5Z_sTjpn0M/edit#gid=302140020 (videos revamping tab)
////

Para usar EarSketch
. Puedes navegar y seleccionar sonidos en el *navegador de sonidos*
. Escribirás código en el *editor de código*,
. Cuando hagas clic en el botón de *ejecutar*, verás tu música en la *Estación de Audio Digital* (o *EAD*)
. Puedes entonces hacer clic en *play* para escuchar tu música
. ¡Puedes seguir cambiando tu programa (tu código) hasta que estés satisfecho con lo que escuchas!
. Puedes abrir y cerrar este cuadro de currículo usando el icono más bajo de la barra izquierda

////
OPTIONAL:
////

¿Qué es una EAD?
Una *Estación de Audio Digital*, o *EAD*, es un software que produce o edita clips de audio o sonido en una computadora, sea en un estudio profesional o en tu computadora personal.
Algunas EADs populares incluyen http://www.avid.com/US/products/pro-tools-software[Pro Tools^] y https://www.apple.com/logic-pro/[Logic Pro^], http://www.apple.com/mac/garageband/[GarageBand^], y http://www.reaper.fm/[Reaper^].
Con una EAD, puedes grabar, editar, visualizar y poner archivos de audio. Estos archivos de audio también se llaman *clips*.
EarSketch es igual que una EAD, con la diferencia de que puedes programar directamente los elementos musicales usando código.

Este video explica cómo se hace pleno uso de la EAD:

[role="curriculum-mp4"]
[[video1b]]
video::./videoMedia/001-06-TheDAWinDetail-PY-JS.mp4[]

////
TODO: This video needs some revamping. See recommandations here: https://docs.google.com/spreadsheets/d/114pWGd27OkNC37ZRCZDIvoNPuwGLcO8KM5Z_sTjpn0M/edit#gid=302140020 (videos revamping tab)
////

////
END OF OPTIONAL
////

¡Vamos a tratar de ejecutar un programa en EarSketch! En la casilla de abajo, haz clic en el icono azul del portapapeles que se encuentra en la esquina derecha superior. Así se pegará el código de ejemplo en el *editor de código*. No hace falta entender el código todavía. Solamente haz clic en el botón de _ejecutar_: tu música aparecerá en la EAD. Puedes tocar _play_ para escucharla.

[role="curriculum-python"]
[source,python]
----
# código python
#
# nombre_del_script: Script de introducción
#
# autor: El Equipo de EarSketch
#
# descripción: Este código agrega un clip de audio a la EAD
#
#
#

#Sección de configuración
from earsketch import *
init()
setTempo(120)

#Sección de música
fitMedia(TECHNO_SYNTHPLUCK_001, 1, 1, 9)

#Sección donde se termina
finish()

----

[role="curriculum-javascript"]
[source,javascript]
----
// código javascript
//
// nombre_del_script: Script de introducción
//
// autor: El Equipo de EarSketch
//
// descripción: Este código agrega un clip de audio a la EAD
//
//
//

//Sección de configuración
init();
setTempo(120);

//Sección de música
fitMedia(TECHNO_SYNTHPLUCK_001, 1, 1, 9);

//Sección donde se termina
finish();

----



[[ch_1_2_createanewscript]]
=== ¡Crea tu primer script!

En EarSketch, cada script que escribas corresponderá a una canción. Vamos a ver cómo crear un script.

. *Iniciar una sesión (_sign in_) o crear una nueva cuenta* en la esquina derecha superior de tu pantalla. Si haces clic en el botón blanco que dice "Crear / Resetear la Cuenta", puedes recuperar una contraseña perdida o crear una nueva cuenta ("Registrar una Nueva Cuenta"). Advertencia: en general en el Internet, no uses la misma contraseña para todas tus cuentas y nunca compartas tu contraseña.

. *Haz clic para crear:* Si no tienes abierto ningún script, haz clic en el enlace grande azul en el editor de código "haz clic aquí para crear un nuevo script".
+
Si ya tienes un script o más abiertos, entonces haz clic en el icono "+" azul a lado de las pestañas.
+
[[newscriptpluspng]]
.Create a new script, open scripts
[caption="Figure 1.2.1: "]
image::../media/U1P1/newScriptPlus.png[Alt Text]

////
TODO: update this screenshot to the current "+"
////

. *Elige un nombre e idioma:* El cuadro de diálogo que dice "Crear un nuevo script" se abre. Ponle nombre a tu nuevo script: es el nombre de tu canción. Entonces selecciona el lenguaje de programación (Python o Javascript). Por fin, haz clic en el botón de "Crear".
+
[[newscriptpromptpy]]
.The create a new script dialog box
[role="curriculum-python"]
[caption="Figure 1.2.2: "]
image::../media/U1P1/newScriptPromptPY.png[Alt Text]
[[newscriptpromptjs]]
.The create a new script dialog box
[role="curriculum-javascript"]
[caption="Figure 1.2.2: "]
image::../media/U1P1/newScriptPromptJS.png[Alt Text]

////
OPTIONAL
////

¿Qué es un lenguaje de programación?

El código está escrito en un *lenguaje de programación*, el cual incluye su propio vocabulario y sintaxis, igual que cualquier lenguaje regular. Tienes que saber cuáles son las reglas gramaticales de tu lenguaje de programación, o la computadora no podrá ejecutar tus instrucciones.

En EarSketch, puedes programar en Python o JavaScript.

[role="curriculum-python"]
Estás en modo Python. Compañías como Google, Yahoo, NASA y Disney usan Python para programar juegos como Civilization 4, Battlefield 2 y Crystal Space.

[role="curriculum-javascript"]
Estás en modo JavaScript. JavaScript es uno de los diez lenguajes de programación más populares del mundo. Casi todas las páginas web usan JavaScript.

En su nivel más profundo, las computadoras operan en combinaciones de 1s y 0s: números binarios. Eso se debe a que los componentes electrónicos pueden reaccionar de modo diferente si hay una corriente eléctrica (1) o si no hay corriente eléctrica (0). Cuando se toca el botón de *ejecutar*, la computadora traduce las instrucciones de Python o JavaScript a código binario. El código es *ejecutado* por la computadora, y verás tu música aparecer en la EAD.

////
END OF OPTIONAL
////

[[ch_1_3_fitmedia]]
=== La función `fitMedia()`

Ahora que has creado tu primer script, ¡empecemos a trabajar en tu música!

[role="curriculum-python"]
Empieza a escribir tu código entre las líneas `setTempo(120)` y `finish()`.
[role="curriculum-javascript"]
Empieza a escribir tu código entre las líneas `setTempo(120);` y `finish();`.

Mira este video para ver cómo agregar un clip de audio a tu canción:

[role="curriculum-python curriculum-mp4"]
[[video110py]]
video::./videoMedia/001-10-ComposingInEarSketch-PY.mp4[]

[role="curriculum-javascript curriculum-mp4"]
[[video110js]]
video::./videoMedia/001-10-ComposingInEarSketch-JS.mp4[]

Para agregar un clip de sonido a la EAD, empezamos escribiendo `fitMedia()`. Entre los paréntesis, tendremos 4 parámetros, separados por comas:
. Un *nombre de clip*: coloca tu cursor entre los paréntesis, ve al navegador de sonidos, selecciona un clip y pégalo usando el icono azul de pegar.
. El *número de pista musical*: las pistas musicales (tracks) son las filas que atraviesan la EAD; te ayudan a organizar tus sonidos por tipo de instrumento (voz; guitarra solista; guitarra rítmica, bajo, baterías, etc.). Para tu primer sonido, puedes empezar en la pista musical uno.
. El *compás de comienzo*: cuando tu sonido empezará a sonar. Los compases son unidades de tiempo musical. Un compás contiene 4 tiempos. Puedes empezar tu primer sonido en compás número uno.
. El *último compás*: cuando tu sonido deja de sonar.
*Por ejemplo: `fitMedia(Y18_DRUM_SAMPLES_2, 1, 1, 5)` colocará el sonido `Y18_DRUM_SAMPLES_2` en la pista musical 1 (track 1) del compás 1 al compás 5.*

[role="curriculum-javascript"]
Una *declaración* le indica a la computadora que ejecute una acción. Por ejemplo, `fitMedia(Y18_DRUM_SAMPLES_1, 1, 1, 5);` es una declaración. Todas las declaraciones en JavaScript *_deben terminar con punto y coma_*.

Entonces, haz clic en _ejecutar_: debes poder visualizar tu sonido en la EAD. Cuando toques _play_ puedes escucharlo.


////
OPTIONAL
////
Aprende más sobre el navegador de sonidos


El *Navegador de Sonidos*: Navega o busca entre los 4,000 clips de audio para usarlos en tu música, hechos por músicos/productores
https://en.wikipedia.org/wiki/Young_Guru[Young Guru^] y https://en.wikipedia.org/wiki/Richard_Devine[Richard Devine^].

////
TODO: add the correct number of clips and new musicians
////

////
END OF OPTIONAL
////

////
OPTIONAL
////

Mira algunos ejemplos de código usando `fitMedia()`:

[role="curriculum-python"]
[source,python]
----
# código python
#
# nombre_del_script: Demostración de EarSketch
#
# autor: El Equipo de EarSketch
#
# descripción: Cómo usar fitMedia() para agregar un clip a la EAD
#
#
#

#Configuración
from earsketch import *
init()
setTempo(120)

#Música
fitMedia(Y18_DRUM_SAMPLES_2, 1, 1, 5)


#Fin
finish()

----

[role="curriculum-javascript"]
[source,javascript]
----
// código javascript
//
// nombre_del_script: Demostración de EarSketch
//
// autor: El Equipo de EarSketch
//
// descripción: Cómo usar fitMedia() para agregar un clip a la EAD
//
//
//

//Configuración
init();
setTempo(120);

//Música
fitMedia(Y18_DRUM_SAMPLES_2, 1, 1, 5);

//Fin
finish();

----

Para un desafío extra, agrega más llamadas de `fitMedia()` a tu script tal como lo hacemos a continuación. Toma en cuenta que usamos otro número de pista musical para cada llamada a `fitMedia()`:

[role="curriculum-python"]
[source,python]
----
# código python
#
# nombre_del_script: Opus 1
#
# autor: El Equipo de EarSketch
#
# descripción: Uso de múltiples llamadas a fitMedia(), en pistas musicales diferentes y con clips diferentes
#
#
#

# Sección de configuración
from earsketch import *

init()
setTempo(100)

# Sección de música

fitMedia(Y01_DRUMS_1, 1, 1, 9)
fitMedia(Y11_BASS_1, 2, 1, 9)
fitMedia(Y11_GUITAR_1, 3, 1, 9)

# Sección donde se termina

finish()

----

[role="curriculum-javascript"]
[source,javascript]
----

// código javascript
//
// nombre_del_script: Opus 1
//
// autor: El Equipo de EarSketch
//
// descripción: Uso de múltiples llamadas a fitMedia(), en pistas musicales diferentes y con clips diferentes
//
//
//

// Sección de configuración

init();
setTempo(100);

// Sección de música

fitMedia(Y01_DRUMS_1, 1, 1, 9);
fitMedia(Y11_BASS_1, 2, 1, 9);
fitMedia(Y11_GUITAR_1, 3, 1, 9);

// Sección donde se termina

finish();

----


////
END OF OPTIONAL
////


.PRÁCTICA
****
Cómo usar sonidos que te gusten:

. Coloca sonidos en 2 pistas musicales diferentes
. Coloca sonidos de compás 2 a 12
. Crea una corta canción con 3 pistas musicales que duren 8 compases o más

Para cada ejercicio, pide que tu compañero/a escuche tu canción.

Si tienes algunos errores cuando ejecutes tu código, revisa el siguiente capítulo sobre cómo depurar el código.
****


[[ch_1_4_debugging]]
=== Cómo depurar tu código

A veces los programadores crean errores que causan que el código funcione incorrectamente o que no funcione en absoluto. Dentro de la programación, las fallas de código se llaman *errores* o *_bugs_* (una palabra en inglés que literalmente significa "insectos"). El proceso de encontrar y arreglar los errores se llama la *depuración* (*_debugging_*, en inglés). Puedes usar las estrategias de depuración, utilizando la consola.

[role="curriculum-python curriculum-mp4"]
[[video3py]]
video::./videoMedia/003-02-UsingtheConsole-PY.mp4[]

[role="curriculum-javascript curriculum-mp4"]
[[video3js]]
video::./videoMedia/003-02-UsingtheConsole-JS.mp4[]

////
TODO: This video needs some revamping. See recommendations here: https://docs.google.com/spreadsheets/d/114pWGd27OkNC37ZRCZDIvoNPuwGLcO8KM5Z_sTjpn0M/edit#gid=302140020 (videos revamping tab)
////

////
OPTIONAL
////

¿Cuáles son los diferentes tipos de errores?
. Los *errores de sintaxis*: Tu programa no se ejecuta porque tu código rompe las reglas de *sintaxis* del lenguaje (por ejemplo, te olvidaste cerrar un paréntesis o escribiste fitMedia incorrectamente).
. Los *errores en tiempo de ejecución*: Tu programa se empieza a ejecutar, pero se detiene por un error.
. Los *errores de lógica*: Tu programa se ejecuta, pero no hace lo que se espera. Puedes arreglar estos errores mirando la EAD para revisar si los clips que quiso agregar fueron en realidad agregados en el lugar correcto.

////
END OF OPTIONAL
////


Algunos errores comunes son:

. Los *errores ortográficos:* Revisa la ortografía cuando uses una función como `fitMedia()`, o constantes sonoras. También, el código no puede llevar acentos. Hay que escribir "musica" en vez de "música", por ejemplo.
. *Mayúscula o minúscula:* Para la mayoría de las palabras usadas en la programación, hay que fijarse si cada letra debe ser en mayúscula o minúscula (la computadora reconoce la diferencia entre ambas). Presta atención a las minúsculas y mayúsculas. Por ejemplo, escribe `fitMedia()` y no `FitMedia()` o `fitmedia()`. La mayoría de los caracteres en un script siguen una regla llamada *_camel-caps_*: se escribe la primera palabra en minúscula, y se escribe la primera letra de las siguientes palabras en mayúscula, igual que en el ejemplo `ejemploNombreDeLaFuncion()`.
. *Paréntesis:* Si se te olvida poner un paréntesis inicial o un segundo paréntesis donde es necesario causará un <<Ch_31#syntaxerror,syntax error>>.
. La *configuración del script:* EarSketch agrega funciones de configuración a un nuevo script automáticamente, pero tal vez borraste sin querer `from earsketch import *`, `init()`, `setTempo()`, o `finish()`. Asegúrate de que estas funciones aparezcan en cada script.
. *Puntuación:* La falta de comas u otros errores de puntuación.

¡Es hora de practicar!
Encuentra los 5 errores en el siguiente código:

[role="curriculum-python"]
[source,python]
----
# código python
#
# nombre_del_script: Encuentra los 5 errores
#
# autor: El Equipo de EarSketch
#
# descripción: Busca y arregla los errores en este script
#

from earsketch import *

init)
setTempo(88)

fitMdia(HIPHOP_DUSTYGROOVE_017, 1, 1 9)
fitmedia(2,HIPHOP_DUSTYGROOVE_015,1,9)


finish()
----

[role="curriculum-javascript"]
[source,javascript]
----
// código javascript
//
// nombre_del_script: Encuentra los 5 errores
//
// autor: El Equipo de EarSketch
//
// descripción: Busca y arregla los errores en este script
//

init;
setTempo(88);

fitMdia(HIPHOP_DUSTYGROOVE_017, 1, 1 9);
fitmedia(2,HIPHOP_DUSTYGROOVE_015,1,9);


finish();
----
////
OPTIONAL
////

Aquí está la respuesta

. La función `init()` falta un paréntesis
. Al primer `fitMedia()` le falta una 'e'
. Al primer `fitMedia()` le falta una coma entre el tercer y cuarto parámetro
. Al segundo `fitMedia()` le falta una 'M' en mayúscula
. En el segundo `fitMedia()`, el orden de los parámetros no es correcto: el nombre del clip de sonido debe ir antes del número de pista musical

////
END OF OPTIONAL
////

Mira a <</en/every-error-explained-in-detail#,Every Error Explained in Detail>> para una descripción de diferentes tipos de errores y cómo prevenirlos.


////
TODO: when options are ready, modify the link
////






[[chapter1summary]]
=== Resumen del capítulo 1

[role="curriculum-python"]
* Una línea de código es una instrucción que la computadora ejecute. Todas las instrucciones juntas forman el programa.
* *EADs* son software de computadora especializado para grabar, editar y poner archivos de audio digital, o *clips*. EarSketch es una EAD que permite que se coloquen clips de audio en una secuencia de tiempo usando código.
* Para hacer música en EarSketch, primero se escribe código en el cuadro del editor de código. Después de hacer clic en ejecutar, se toca la música en el cuadro de la EAD.
* Puedes encontrar los clips de sonido en el Navegador de Sonidos. Para usarlos, hay que escribir o pegar su nombre todo en mayúsculas en el código.
* Los comentarios son líneas de código que la computadora no ejecuta. Sin embargo, son útiles cuando se quiere escribir notas dentro de un script.
* Un *programa* de computadora es una secuencia de instrucciones que la computadora ejecuta para realizar una tarea específica.
* *Lenguajes de programación* son colecciones de palabras y símbolos que la computadora entiende. Un lenguaje de programación sigue una sintaxis a fin de organizar el código.
* Un script de EarSketch consiste de una sección de comentarios, configuración, música y una sección donde termina (_finish_, en inglés).
* `from earsketch import *` añade el EarSketch API, una interfaz de programación avanzada, a tu proyecto. Hay que incluirla en la parte superior de cada script.
* `init()` prepara la EAD para que acepte y exhiba la música. Tiene que estar presente en cada script de EarSketch.
* `setTempo()` permite que se especifique el tempo de tu canción. Se tiene que incluir en cada script de EarSketch.
* `finish()` notifica a la EAD que tu código se ha terminado. Hay que incluirlo al final de cada script de EarSketch.
* Para crear un nuevo script haz clic en el enlace azul grande o el icono "+" si otro script ya está abierto.
* `fitMedia()` es la manera principal de agregar sonido a la EAD. Tiene cuatro argumentos, la información que necesita para hacer música:
** *nombreDelArchivo:* El clip de sonido que se mete en la EAD.
** *númeroDePistaMusical:* La pista (track) en la cual se coloca la música.
** *momentoDeComienzo:* El compás en el cual el clip de sonido empezará.
** *momentoCuandoTermina:* El compás en el cual el clip de sonido terminará.
* *Depuración* es el proceso de encontrar y arreglar *_bugs_*, errores hechos por el/la programador/a.
* Las reglas de *sintaxis* determinan cómo se escribe el código en el lenguaje de programación en cuestión.
* La *consola* muestra información sobre el estado de un programa. Es útil para depurar errores de sintaxis.
* Errores comunes de principiantes incluyen las erratas, el uso incorrecto de mayúsculas o minúsculas, la falta de paréntesis, la configuración incorrecta del script...

[role="curriculum-javascript"]
* Una línea de código es una instrucción que la computadora ejecute. Todas las instrucciones juntas forman el programa.
* *EADs* son software de computadora especializado para grabar, editar y poner archivos de audio digital, o *clips*. EarSketch es una EAD que permite que se coloquen clips de audio en una secuencia de tiempo usando código.
* Para hacer música en EarSketch, primero se escribe código en el cuadro del editor de código. Después de hacer clic en ejecutar, se toca la música en el cuadro de la EAD.
* Puedes encontrar los clips de sonido en el Navegador de Sonidos. Para usarlos, hay que escribir o pegar su nombre todo en mayúscula en el código.
* Los comentarios son líneas de código que la computadora no ejecuta. Sin embargo, son útiles cuando se quiere hacer notas dentro del script.
* Un *programa* de computadora es una secuencia de instrucciones que una computadora ejecuta para realizar una tarea específica.
* *Lenguajes de programación* son colecciones de palabras y símbolos que la computadora entiende. Un lenguaje de programación sigue una sintaxis a fin de organizar el código.
* Un script de EarSketch consiste de una sección de comentarios, configuración, música y una sección donde termina (_finish_, en inglés).
* `from earsketch import *` añade el EarSketch API, la interfaz de programación avanzada, a tu proyecto. Hay que incluirla en la parte superior de cada script.
* `init()` prepara la EAD para que acepte y exhiba la música. Tiene que estar presente en cada script de EarSketch.
* `setTempo()` permite que se especifique el tempo de tu canción. Se tiene que incluir en cada script de EarSketch.
* `finish()` notifica a la EAD que tu código termina. Hay que incluirlo al final de cada script de EarSketch.
* Para crear un nuevo script haz clic en el enlace azul grande o el icono "+" si otro script ya está abierto.
* `fitMedia()` es la manera principal de agregar sonido a la EAD. Tiene cuatro argumentos, la información que necesita para hacer música:
** *nombreDelArchivo:* El clip de sonido que se mete en la EAD.
** *númeroDePistaMusical:* La pista (track) en la cual se coloca la música.
** *momentoDeComienzo:* El compás en el cual el clip de sonido empezará.
** *momentoCuandoTermina:* El compás en el cual el clip de sonido terminará.
* *Depuración* es el proceso de encontrar y arreglar *_bugs_*, errores hechos por el/la programador/a.
* Las reglas de *sintaxis* determinan cómo se escribe el código en el lenguaje de programación en cuestión.
* La *consola* muestra información sobre el estado del programa. Es útil para depurar errores de sintaxis.
* Errores comunes de principiantes incluyen las erratas, el uso incorrecto de mayúsculas o minúsculas, la falta de paréntesis, la configuración incorrecta del script...


[[chapter-questions]]
=== Preguntas

++++
<ul id="questionsContainer"></ul>
<script>
question1 = new Question(1, "¿Cuál de las siguientes respuestas no es un cuadro en la estación de EarSketch?", "El navegador de efectos", "El editor de código", "La EAD", "La consola");
question2 = new Question(2, "Cuántos parámetros tienes que tener en tu función fitMedia()?", "4", "6", "2", "3");
question3 = new Question(3,"Un script corresponde a...", "Una canción de EarSketch", "Una línea de código", "Un lenguaje de programación", "Un programador");
question4 = new Question(4,"¿Qué es un compás?", "Una unidad de tiempo musical", "Una unidad de volumen de audio", "Una línea en la EAD", "Una unidad de registro");
question5 = new Question(5, "¿Cuál de las siguientes respuestas no es un tipo de error comúnmente encontrado en el código?", "Errores gramaticales", "Errores en tiempo de ejecución", "Errores de lógica", "Errores de sintaxis");
question6 = new Question(6, "¿Dónde en la estación de EarSketch puedes conseguir información sobre tus errores?", "La consola", "El navegador de sonidos", "El navegador del script", "La EAD");
</script>
++++
